[project]
name = "aetherflow"
version = "0.1.0"
description = "A powerful Python framework for building declarative, concurrent data processing workflows"
authors = [
    {name = "12306hujunjie", email = "545512690@qq.com"},
]
dependencies = ["dependency-injector>=4.48.1", "pydantic>=2.11.7"]
requires-python = ">=3.10"
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["workflow", "data-processing", "concurrent", "declarative", "pipeline"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]

[project.urls]
Homepage = "https://github.com/12306hujunjie/AetherFlow"
Repository = "https://github.com/12306hujunjie/AetherFlow"
Documentation = "https://github.com/12306hujunjie/AetherFlow/blob/main/docs/AetherFlow技术文档.md"
"Bug Tracker" = "https://github.com/12306hujunjie/AetherFlow/issues"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.0.0",
    "pytest-html>=4.1.1",
    "flake8>=7.1.1",
    "pre-commit>=4.0.1",
    "ruff>=0.12.9",
    "mypy>=1.13.0",
    "bandit>=1.7.10",
    "pytest-asyncio>=1.1.0",
]

# Ruff configuration
[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "C901",   # 复杂度控制 - 某些函数确实需要较高复杂度
    "F405",   # 星号导入可能未定义名称 - 测试工具模块使用
    "F403",   # 星号导入无法检测未使用导入 - 测试工具模块使用
    "E501",   # 行长度限制 - 某些长行是合理的
    "B007",   # 循环变量未使用 - 某些循环确实不需要使用变量
    "E712",   # 与True/False的比较 - 某些情况下需要显式比较
    "F841",   # 局部变量已赋值但从未使用 - 某些变量用于调试或文档目的
    "F811",   # 重复定义 - 某些情况下需要重新定义
    "B011",   # assert False的使用 - 测试代码中的合理用法
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

# MyPy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

# Pytest configuration
[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"


# 过滤警告
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Bandit configuration
[tool.bandit]
skips = ["B101"]  # Skip assert_used test
exclude_dirs = ["tests"]

[tool.pdm]
distribution = true
